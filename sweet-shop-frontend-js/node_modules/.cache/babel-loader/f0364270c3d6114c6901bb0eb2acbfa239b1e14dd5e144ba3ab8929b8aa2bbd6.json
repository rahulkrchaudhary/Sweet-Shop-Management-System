{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = 'http://localhost:9090/api';\n\n// Create axios instance\nconst api = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_API_URL,\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Add token to requests if available\napi.interceptors.request.use(config => {\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  return config;\n});\n\n// Auth Services\nexport const authService = {\n  login: async loginRequest => {\n    const response = await api.post('/auth/login', loginRequest);\n    return response.data;\n  },\n  register: async registerRequest => {\n    const response = await api.post('/auth/register', registerRequest);\n    return response.data;\n  },\n  logout: () => {\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n  },\n  getCurrentUser: () => {\n    const user = localStorage.getItem('user');\n    return user ? JSON.parse(user) : null;\n  },\n  isAuthenticated: () => {\n    return !!localStorage.getItem('token');\n  }\n};\n\n// Sweet Services\nexport const sweetService = {\n  getAllSweets: async () => {\n    const response = await api.get('/sweets');\n    return response.data;\n  },\n  searchSweets: async filters => {\n    const params = new URLSearchParams();\n    if (filters.name) params.append('name', filters.name);\n    if (filters.category) params.append('category', filters.category);\n    if (filters.minPrice !== undefined) params.append('minPrice', filters.minPrice.toString());\n    if (filters.maxPrice !== undefined) params.append('maxPrice', filters.maxPrice.toString());\n    const response = await api.get(`/sweets/search?${params.toString()}`);\n    return response.data;\n  },\n  addSweet: async sweetData => {\n    const response = await api.post('/sweets', sweetData);\n    return response.data;\n  },\n  updateSweet: async (id, sweetData) => {\n    const response = await api.put(`/sweets/${id}`, sweetData);\n    return response.data;\n  },\n  deleteSweet: async id => {\n    await api.delete(`/sweets/${id}`);\n  },\n  restockSweet: async (id, quantity) => {\n    // Get current sweet data first\n    const currentSweet = await api.get(`/sweets`);\n    const sweet = currentSweet.data.find(s => s.id === id);\n    if (!sweet) throw new Error('Sweet not found');\n\n    // Update with new quantity\n    const updateData = {\n      name: sweet.name,\n      category: sweet.category.name,\n      price: sweet.price,\n      quantity: quantity\n    };\n    const response = await api.put(`/sweets/${id}`, updateData);\n    return response.data;\n  }\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","api","create","baseURL","process","env","REACT_APP_BACKEND_API_URL","headers","interceptors","request","use","config","token","localStorage","getItem","Authorization","authService","login","loginRequest","response","post","data","register","registerRequest","logout","removeItem","getCurrentUser","user","JSON","parse","isAuthenticated","sweetService","getAllSweets","get","searchSweets","filters","params","URLSearchParams","name","append","category","minPrice","undefined","toString","maxPrice","addSweet","sweetData","updateSweet","id","put","deleteSweet","delete","restockSweet","quantity","currentSweet","sweet","find","s","Error","updateData","price"],"sources":["C:/Users/rahul/Desktop/Sweet-Shop-Management-System/sweet-shop-frontend-js/src/services/api.js"],"sourcesContent":["import axios from 'axios';\r\n\r\nconst API_BASE_URL = 'http://localhost:9090/api';\r\n\r\n// Create axios instance\r\nconst api = axios.create({\r\n  baseURL: process.env.REACT_APP_BACKEND_API_URL,\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Add token to requests if available\r\napi.interceptors.request.use((config) => {\r\n  const token = localStorage.getItem('token');\r\n  if (token) {\r\n    config.headers.Authorization = `Bearer ${token}`;\r\n  }\r\n  return config;\r\n});\r\n\r\n// Auth Services\r\nexport const authService = {\r\n  login: async (loginRequest) => {\r\n    const response = await api.post('/auth/login', loginRequest);\r\n    return response.data;\r\n  },\r\n\r\n  register: async (registerRequest) => {\r\n    const response = await api.post('/auth/register', registerRequest);\r\n    return response.data;\r\n  },\r\n\r\n  logout: () => {\r\n    localStorage.removeItem('token');\r\n    localStorage.removeItem('user');\r\n  },\r\n\r\n  getCurrentUser: () => {\r\n    const user = localStorage.getItem('user');\r\n    return user ? JSON.parse(user) : null;\r\n  },\r\n\r\n  isAuthenticated: () => {\r\n    return !!localStorage.getItem('token');\r\n  }\r\n};\r\n\r\n// Sweet Services\r\nexport const sweetService = {\r\n  getAllSweets: async () => {\r\n    const response = await api.get('/sweets');\r\n    return response.data;\r\n  },\r\n\r\n  searchSweets: async (filters) => {\r\n    const params = new URLSearchParams();\r\n    \r\n    if (filters.name) params.append('name', filters.name);\r\n    if (filters.category) params.append('category', filters.category);\r\n    if (filters.minPrice !== undefined) params.append('minPrice', filters.minPrice.toString());\r\n    if (filters.maxPrice !== undefined) params.append('maxPrice', filters.maxPrice.toString());\r\n    \r\n    const response = await api.get(`/sweets/search?${params.toString()}`);\r\n    return response.data;\r\n  },\r\n\r\n  addSweet: async (sweetData) => {\r\n    const response = await api.post('/sweets', sweetData);\r\n    return response.data;\r\n  },\r\n\r\n  updateSweet: async (id, sweetData) => {\r\n    const response = await api.put(`/sweets/${id}`, sweetData);\r\n    return response.data;\r\n  },\r\n\r\n  deleteSweet: async (id) => {\r\n    await api.delete(`/sweets/${id}`);\r\n  },\r\n\r\n  restockSweet: async (id, quantity) => {\r\n    // Get current sweet data first\r\n    const currentSweet = await api.get(`/sweets`);\r\n    const sweet = currentSweet.data.find((s) => s.id === id);\r\n    \r\n    if (!sweet) throw new Error('Sweet not found');\r\n    \r\n    // Update with new quantity\r\n    const updateData = {\r\n      name: sweet.name,\r\n      category: sweet.category.name,\r\n      price: sweet.price,\r\n      quantity: quantity\r\n    };\r\n    \r\n    const response = await api.put(`/sweets/${id}`, updateData);\r\n    return response.data;\r\n  }\r\n};\r\n\r\nexport default api;"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,YAAY,GAAG,2BAA2B;;AAEhD;AACA,MAAMC,GAAG,GAAGF,KAAK,CAACG,MAAM,CAAC;EACvBC,OAAO,EAAEC,OAAO,CAACC,GAAG,CAACC,yBAAyB;EAC9CH,OAAO,EAAEH,YAAY;EACrBO,OAAO,EAAE;IACP,cAAc,EAAE;EAClB;AACF,CAAC,CAAC;;AAEF;AACAN,GAAG,CAACO,YAAY,CAACC,OAAO,CAACC,GAAG,CAAEC,MAAM,IAAK;EACvC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAC3C,IAAIF,KAAK,EAAE;IACTD,MAAM,CAACJ,OAAO,CAACQ,aAAa,GAAG,UAAUH,KAAK,EAAE;EAClD;EACA,OAAOD,MAAM;AACf,CAAC,CAAC;;AAEF;AACA,OAAO,MAAMK,WAAW,GAAG;EACzBC,KAAK,EAAE,MAAOC,YAAY,IAAK;IAC7B,MAAMC,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,aAAa,EAAEF,YAAY,CAAC;IAC5D,OAAOC,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDC,QAAQ,EAAE,MAAOC,eAAe,IAAK;IACnC,MAAMJ,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,gBAAgB,EAAEG,eAAe,CAAC;IAClE,OAAOJ,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDG,MAAM,EAAEA,CAAA,KAAM;IACZX,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;IAChCZ,YAAY,CAACY,UAAU,CAAC,MAAM,CAAC;EACjC,CAAC;EAEDC,cAAc,EAAEA,CAAA,KAAM;IACpB,MAAMC,IAAI,GAAGd,YAAY,CAACC,OAAO,CAAC,MAAM,CAAC;IACzC,OAAOa,IAAI,GAAGC,IAAI,CAACC,KAAK,CAACF,IAAI,CAAC,GAAG,IAAI;EACvC,CAAC;EAEDG,eAAe,EAAEA,CAAA,KAAM;IACrB,OAAO,CAAC,CAACjB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EACxC;AACF,CAAC;;AAED;AACA,OAAO,MAAMiB,YAAY,GAAG;EAC1BC,YAAY,EAAE,MAAAA,CAAA,KAAY;IACxB,MAAMb,QAAQ,GAAG,MAAMlB,GAAG,CAACgC,GAAG,CAAC,SAAS,CAAC;IACzC,OAAOd,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDa,YAAY,EAAE,MAAOC,OAAO,IAAK;IAC/B,MAAMC,MAAM,GAAG,IAAIC,eAAe,CAAC,CAAC;IAEpC,IAAIF,OAAO,CAACG,IAAI,EAAEF,MAAM,CAACG,MAAM,CAAC,MAAM,EAAEJ,OAAO,CAACG,IAAI,CAAC;IACrD,IAAIH,OAAO,CAACK,QAAQ,EAAEJ,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACK,QAAQ,CAAC;IACjE,IAAIL,OAAO,CAACM,QAAQ,KAAKC,SAAS,EAAEN,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACM,QAAQ,CAACE,QAAQ,CAAC,CAAC,CAAC;IAC1F,IAAIR,OAAO,CAACS,QAAQ,KAAKF,SAAS,EAAEN,MAAM,CAACG,MAAM,CAAC,UAAU,EAAEJ,OAAO,CAACS,QAAQ,CAACD,QAAQ,CAAC,CAAC,CAAC;IAE1F,MAAMxB,QAAQ,GAAG,MAAMlB,GAAG,CAACgC,GAAG,CAAC,kBAAkBG,MAAM,CAACO,QAAQ,CAAC,CAAC,EAAE,CAAC;IACrE,OAAOxB,QAAQ,CAACE,IAAI;EACtB,CAAC;EAEDwB,QAAQ,EAAE,MAAOC,SAAS,IAAK;IAC7B,MAAM3B,QAAQ,GAAG,MAAMlB,GAAG,CAACmB,IAAI,CAAC,SAAS,EAAE0B,SAAS,CAAC;IACrD,OAAO3B,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED0B,WAAW,EAAE,MAAAA,CAAOC,EAAE,EAAEF,SAAS,KAAK;IACpC,MAAM3B,QAAQ,GAAG,MAAMlB,GAAG,CAACgD,GAAG,CAAC,WAAWD,EAAE,EAAE,EAAEF,SAAS,CAAC;IAC1D,OAAO3B,QAAQ,CAACE,IAAI;EACtB,CAAC;EAED6B,WAAW,EAAE,MAAOF,EAAE,IAAK;IACzB,MAAM/C,GAAG,CAACkD,MAAM,CAAC,WAAWH,EAAE,EAAE,CAAC;EACnC,CAAC;EAEDI,YAAY,EAAE,MAAAA,CAAOJ,EAAE,EAAEK,QAAQ,KAAK;IACpC;IACA,MAAMC,YAAY,GAAG,MAAMrD,GAAG,CAACgC,GAAG,CAAC,SAAS,CAAC;IAC7C,MAAMsB,KAAK,GAAGD,YAAY,CAACjC,IAAI,CAACmC,IAAI,CAAEC,CAAC,IAAKA,CAAC,CAACT,EAAE,KAAKA,EAAE,CAAC;IAExD,IAAI,CAACO,KAAK,EAAE,MAAM,IAAIG,KAAK,CAAC,iBAAiB,CAAC;;IAE9C;IACA,MAAMC,UAAU,GAAG;MACjBrB,IAAI,EAAEiB,KAAK,CAACjB,IAAI;MAChBE,QAAQ,EAAEe,KAAK,CAACf,QAAQ,CAACF,IAAI;MAC7BsB,KAAK,EAAEL,KAAK,CAACK,KAAK;MAClBP,QAAQ,EAAEA;IACZ,CAAC;IAED,MAAMlC,QAAQ,GAAG,MAAMlB,GAAG,CAACgD,GAAG,CAAC,WAAWD,EAAE,EAAE,EAAEW,UAAU,CAAC;IAC3D,OAAOxC,QAAQ,CAACE,IAAI;EACtB;AACF,CAAC;AAED,eAAepB,GAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}